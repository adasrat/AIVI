import cv2
import pyttsx3
import threading
from ultralytics import YOLO


model = YOLO("yolov8n.pt")


engine = pyttsx3.init()
engine.setProperty('rate', 150)  # Adjust speech speed 


def speak(text):
    tts_thread = threading.Thread(target=lambda: engine.say(text) or engine.runAndWait())
    tts_thread.daemon = True  
    tts_thread.start()


cap = cv2.VideoCapture(1)  # Change index if necessary

while cap.isOpened():
    ret, frame = cap.read()
    if not ret:
        break

    results = model(frame)
    detected_objects = set()  

    for r in results:
        for box in r.boxes:
            x1, y1, x2, y2 = map(int, box.xyxy[0])
            confidence = box.conf[0].item()
            label = r.names[int(box.cls[0])]
            
            
            cv2.rectangle(frame, (x1, y1), (x2, y2), (0, 255, 0), 2)
            cv2.putText(frame, f"{label}: {confidence:.2f}", (x1, y1 - 10),
                        cv2.FONT_HERSHEY_SIMPLEX, 0.5, (0, 255, 0), 2)
            
            
            detected_objects.add(label)

    
    if detected_objects:
        objects_text = ", ".join(detected_objects)
        speak(f"Detected: {objects_text}")

    
    cv2.imshow("Object Detection", frame)
    if cv2.waitKey(1) & 0xFF == ord("q"):
        break

cap.release()
cv2.destroyAllWindows()
